"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[8386],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,d=u["".concat(o,".").concat(m)]||u[m]||g[m]||i;return t?r.createElement(d,c(c({ref:n},s),{},{components:t})):r.createElement(d,c({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,c=new Array(i);c[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[u]="string"==typeof e?e:a,c[1]=l;for(var p=2;p<i;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},445:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:7},c="match",l={unversionedId:"reg_exp/match",id:"reg_exp/match",title:"match",description:"match",source:"@site/docs/reg_exp/match.md",sourceDirName:"reg_exp",slug:"/reg_exp/match",permalink:"/clipcc-extension-bddjr_toolbox_v2/reg_exp/match",draft:!1,editUrl:"https://github.com/bddjr/clipcc-extension-bddjr_toolbox_v2/tree/doc/docs/reg_exp/match.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"split",permalink:"/clipcc-extension-bddjr_toolbox_v2/reg_exp/split"},next:{title:"\u4fbf\u5229\u79ef\u6728",permalink:"/clipcc-extension-bddjr_toolbox_v2/category/\u4fbf\u5229\u79ef\u6728"}},o={},p=[{value:"\u8f93\u5165\u7c7b\u578b",id:"\u8f93\u5165\u7c7b\u578b",level:2},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",level:2},{value:"\u6e90\u7801",id:"\u6e90\u7801",level:2}],s={toc:p},u="wrapper";function g(e){let{components:n,...i}=e;return(0,a.kt)(u,(0,r.Z)({},s,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"match"},"match"),(0,a.kt)("p",null,"match"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(9746).Z,width:"810",height:"132"}),"  "),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u8f93\u5165\u7c7b\u578b"},"\u8f93\u5165\u7c7b\u578b"),(0,a.kt)("p",null,"v\uff1aString",(0,a.kt)("br",{parentName:"p"}),"\n","type\uff1aString",(0,a.kt)("br",{parentName:"p"}),"\n","RegExp\uff1aRegExp | String",(0,a.kt)("br",{parentName:"p"}),"\n","max_length\uff1aNumber | any",(0,a.kt)("br",{parentName:"p"}),"\n","return_type\uff1aString"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u4f7f\u7528\u793a\u4f8b"},"\u4f7f\u7528\u793a\u4f8b"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"2",src:t(9865).Z,width:"1243",height:"151"}),"  "),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u6e90\u7801"},"\u6e90\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/categorys/reg_exp.js"',title:'"/categorys/reg_exp.js"'},"    {//2.0.0\n        opcode: `${category_id}.match`,\n        messageId: `${category_id}.match`,\n        categoryId: category_id,\n        type: type.BlockType.REPORTER,\n        param: {\n            v: {\n                type: type.ParameterType.STRING,\n                default: '#00a5e6#00a5e6#00a5e6'\n            },\n            type: {\n                type: type.ParameterType.STRING,\n                default: 'match',\n                menu: make_menus(\n                    `${category_id}.match.menu`,\n                    'match',\n                    'begin',\n                    'ending',\n                    'begin&ending',\n                    'match&begin',\n                    'match&ending',\n                    'match&begin&ending'\n                )\n            },\n            RegExp: {\n                type: type.ParameterType.STRING,\n                default: '#00a5e6'\n            },\n            max_length: {\n                type: type.ParameterType.NUMBER,\n                default: 'Infinity'\n            },\n            return_type: {\n                type: type.ParameterType.STRING,\n                default: 'ScratchType',\n                menu: myTypeMenu\n            },\n        },\n        function: (args,util)=>{\n            try{\n                let v = String(args.v);\n\n                let ML = args.max_length;\n                if( ML ==='' ){\n                    ML = Infinity;\n                }else{\n                    ML = (+ML);\n                    if( ML<0 || Number.isNaN(ML) ){\n                        ML = Infinity;\n                    }\n                }\n\n                let RE = args.RegExp;\n\n                const MATCH = v.match( RE );\n                if( args.type === 'match' ){\n                    return returnType(\n                        MATCH ? MATCH.slice(0, ML) : [] ,\n                        args.return_type\n                    );\n                }\n\n                let RETURN = [];\n\n                let i = 0;\n                switch( args.type ){\n                    case 'begin':\n                        while( RE.test(v) && i<ML ){\n                            RETURN[i] = RE.lastIndex - MATCH[i].length;\n                            i++;\n                        }\n                        break;\n                    case 'ending':\n                        while( RE.test(v) && i<ML ){\n                            RETURN[i] = RE.lastIndex;\n                            i++;\n                        }\n                        break;\n                    case 'begin&ending':\n                        while( RE.test(v) && i<ML ){\n                            RETURN[i] = [\n                                RE.lastIndex - MATCH[i].length ,\n                                RE.lastIndex\n                            ]\n                            i++;\n                        }\n                        break;\n                    case 'match&begin':\n                        while( RE.test(v) && i<ML ){\n                            RETURN[i] = [\n                                MATCH[i] ,\n                                RE.lastIndex - MATCH[i].length\n                            ]\n                            i++;\n                        }\n                        break;\n                    case 'match&ending':\n                        while( RE.test(v) && i<ML ){\n                            RETURN[i] = [\n                                MATCH[i] ,\n                                RE.lastIndex\n                            ]\n                            i++;\n                        }\n                        break;\n                    case 'match&begin&ending':\n                        while( RE.test(v) && i<ML ){\n                            RETURN[i] = [\n                                MATCH[i] ,\n                                RE.lastIndex - MATCH[i].length ,\n                                RE.lastIndex\n                            ]\n                            i++;\n                        }\n                        break;\n                }\n                return returnType(\n                    RETURN ,\n                    args.return_type\n                );\n                \n            }catch(e){\n                return my_log_block_error( util.currentBlock.id, util.currentBlock.opcode , e );\n            }\n        },\n    },\n")))}g.isMDXComponent=!0},9865:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/2-6fda90545b123bb38d20cd2430c045c2.png"},9746:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-37f128f580cc4f97fb2ffc8fa3a546e3.png"}}]);